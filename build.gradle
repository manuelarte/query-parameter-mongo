buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "nebula.facet" version "7.0.8"
    id 'net.ltgt.errorprone' version '1.1.1'
    id "org.sonarqube" version "2.8"
    id 'com.palantir.git-version' version '0.12.3'
    id 'maven-publish'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.21.2'
}

apply plugin: 'com.bmuschko.nexus'

group = 'io.github.manuelarte.spring'
version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

facets {
    integrationTest {
        parentSourceSet = 'main'
        testTaskName = 'integrationTest'
        includeInCheckLifecycle = true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "manuelarte_query-parameter-mongo"
        property "sonar.organization", "manuelarte"
        property "sonar.host.url", "https://sonarcloud.io"
        // properties["sonar.tests"] += sourceSets.integrationTest.allSource.srcDirs
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone.disableWarningsInGeneratedCode = true
}

dependencies {
    errorprone 'com.google.errorprone:error_prone_core:2.3.4'

    implementation 'io.github.manuelarte.spring:query-parameter-model:0.0.1'
    compileOnly 'org.springframework.boot:spring-boot-starter-data-mongodb:2.2.6.RELEASE'
    compileOnly 'org.springframework.boot:spring-boot-starter-web:2.2.6.RELEASE'

    integrationTestImplementation('org.springframework.boot:spring-boot-starter-test:2.2.6.RELEASE') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-web:2.2.6.RELEASE'
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.2.6.RELEASE'
    integrationTestImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'
}

test {
    useJUnitPlatform()
}

integrationTest {
    useJUnitPlatform()
}

jar {
    enabled = true
}

modifyPom {
    project {
        name rootProject.name
        description 'Query Parameter for MongoDB database engine.'
        url 'https://github.com/manuelarte/query-parameter-mongo'
        inceptionYear '2020'

        scm {
            url 'https://github.com/manuelarte/query-parameter-mongo'
            connection 'scm:https://github.com/manuelarte/query-parameter-mongo.git'
            developerConnection 'scm:git:ssh://com:manuelarte/query-parameter-mongo.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'manuelarte'
                name 'Manuel Doncel Martos'
                email 'manueldoncelmartos@gmail.com'
            }
        }
    }
}

extraArchive {
    sources = true
    tests = false
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

nexusStaging {
    packageGroup = "io.github.manuelarte.spring" //optional if packageGroup == project.getGroup()
    // stagingProfileId = "yourStagingProfileId" //when not defined will be got from server using "packageGroup"
}
